@using System.Net.WebSockets
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div>
    @if (uri != null && !isAuth)
    {
        <Server_Dotnet.Pages.Shared.Components.QrCode data="@uri?.ToString()" />
    }
</div>


@code {
    [Parameter]
    public EventCallback<Messages.Message> SendWsMessage { get; set; }

    Uri? uri { get; set; }
    bool isAuth = false;

    protected Task Send()
    {
        var message = new Messages.Message("Auth", "GetId");
        return SendWsMessage.InvokeAsync(message);
    }

    public void OnWsMessage(Messages.Message message)
    {

        if (message.Controller == "Socket" && message.Method == "SetId")
        {
            string SocketID = message.GetString("ConnectionId");

            string url = Navigation.BaseUri;
            url += "api/auth/?tag=login&k1=";

            uri = new Uri(url + SocketID);
            uri = LNURL.LNURL.EncodeUri(uri, "login", true);

            ProtectedSessionStore.SetAsync("SocketID", SocketID);

            StateHasChanged();
        }
        else if (message.Controller == "Auth" && message.Method == "AuthOk")
        {
            isAuth = true;
            StateHasChanged();
        }
    }
}
